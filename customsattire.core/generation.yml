project:
  namespace: '{Database.Name}.Core'
  directory: .\
database:
  provider: SqlServer
  connectionString: Data Source=(local);Initial Catalog=CustomsAttire;Integrated Security=True;MultipleActiveResultSets=True
  tables:
   - Product
   - Customer
   - Employee
   - POSReport
   - PurchaseOrders
   - Vendor
   - Bill_Header_Items
   - Bill_StatusCode
   - SalesOrder_Items
   - StitchingInvoice
  schemas:
    - HumanResources
    - Person
    - Production
    - Purchasing
    - Sales
  exclude:
    - exact: dbo.SchemaVersions
    - exact : dbo.__EFMigrationsHistory
    - regex: dbo\.SchemaVersions$
    - regex: dbo\.__EFMigrationsHistory$
data:
  context:
    name: '{Database.Name}Context'
    baseClass: DbContext
    namespace: '{Project.Namespace}.Data'
    directory: '{Project.Directory}\Data'
    document: true
  entity:
    baseClass: Definitions.IHaveIdentifier
    namespace: '{Project.Namespace}.Data.Entities'
    directory: '{Project.Directory}\Data\Entities'
    document: true
  mapping:
    namespace: '{Project.Namespace}.Data.Mapping'
    directory: '{Project.Directory}\Data\Mapping'
    document: true
  query:
    generate: true
    indexPrefix: By
    uniquePrefix: GetBy
    namespace: '{Project.Namespace}.Data.Queries'
    directory: '{Project.Directory}\Data\Queries'
    document: true
model:
  shared:
    namespace: '{Project.Namespace}.Domain.Models'
    directory: '{Project.Directory}\Domain\{Entity.Name}\Models'
    exclude:
      properties:
        - '\.Id$'
        - '\.CreatedDate$'
        - '\.CreatedBy$'
        - '\.ModifiedDate$'
        - '\.ModifiedBy$'
        - '\.RowVersion$'
        - 'User\.PasswordHash$'
        - 'User\.ResetHash$'
        - 'User\.InviteHash$'
  read:
    generate: true
    name: '{Entity.Name}ReadModel'
    baseClass: EntityReadModel
    document: true
  create:
    generate: true
    name: '{Entity.Name}CreateModel'
    baseClass: EntityCreateModel
    document: true
    exclude:
      entities:
        - 'UserLogin'
  update:
    generate: true
    name: '{Entity.Name}UpdateModel'
    baseClass: EntityUpdateModel
    document: true
    exclude:
      entities:
        - 'UserLogin'
  mapper:
    generate: true
    name: '{Entity.Name}Profile'
    baseClass: Profile
    namespace: '{Project.Namespace}.Domain.Mapping'
    directory: '{Project.Directory}\Domain\{Entity.Name}\Mapping'
    document: true
  validator:
    generate: true
    name: '{Model.Name}Validator'
    baseClass: 'AbstractValidator<{Model.Name}>'
    namespace: '{Project.Namespace}.Domain.Validation'
    directory: '{Project.Directory}\Domain\{Entity.Name}\Validation'
    document: true
script:
  entity:
    - templatePath: '.\Templates\GenerateControllers.csx'
      fileName: '{Entity.Name}Controller.cs'
      namespace: '{Database.Name}.API.Controllers'
      directory: '..\{Database.Name}.API\Controllers'
      overwrite: true